rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users: only the user can read/write their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    // Withdrawals: authenticated users can create requests, admins can update
    match /withdrawals/{docId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || isAdmin(request.auth.uid));
      allow update: if request.auth != null && isAdmin(request.auth.uid);
      allow delete: if false;
    }
    // notifications: readable by any authenticated user; only admins can create
    match /notifications/{docId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    function isAdmin(uid){
      // simple admin check via a meta doc (create in console)
      return exists(/databases/$(database)/documents/meta/admins) && get(/databases/$(database)/documents/meta/admins).data.list.hasAny([uid]);
    }
  }
}
